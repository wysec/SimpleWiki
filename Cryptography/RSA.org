

* 简介
RSA加密算法是一种非对称加密算法。RSA算法的安全性依赖于对极大整数做因数分解的难度。换言之，对一极大整数做因数分解愈困难，RSA算法愈安全。


* 原理
** 生成公钥和私钥
通过这样的方式来产生一个公钥和一个私钥：
1. 随意选择两个大的[[https://zh.wikipedia.org/wiki/%E7%B4%A0%E6%95%B0][质数]]p和q，其中p不等于q，计算N=pq。
2. 根据[[https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0][欧拉函数]]，求得\lambda(N)=lcm(\lambda(p),\lambda(q))=lcm(p-1,q-1)。 \lambda 是[[https://en.wikipedia.org/wiki/Carmichael_function][卡迈克尔函数]] 。 lcm(x,y)表示x和y的最小公倍数。
3. 选择一个整数e，1<e<\lambda(N)，使e与 \lambda 互质gcd(e,\lambda(N))=1。并求得e关于\lambda 的模反元素，命名为d。（1<d<\lambda(N)，d≡e^-1 (mod \lambda(N))）
4. 将p和q的记录销毁。
(N,e)是公钥，(N,d)是私钥。

实际应用中，公钥和私钥的数据都采用[[https://zh.wikipedia.org/zh-cn/ASN.1][ASN.1]]格式表达。

** 加密消息
假设明文消息是m，则RSA的加密过程可以用下面的公式表示：
#+BEGIN_QUOTE
c=m^e (mod N)
#+END_QUOTE
注意：这里的N和e一起组成公钥(N,e)。

明文消息m必须是整数且小于N，对于比N大的情况，只有将其分割成若干更短的内容，分段加密。通常将明文每一个字转换为这个字的Unicode码，然后将这些数字连在一起组成一个数字。

** 解密消息
假设密文消息是c，RSA的解密过程可以用下面的公式表示：
#+BEGIN_QUOTE
m=c^d (mod N)
#+END_QUOTE
注意：这里的N和d一起组成私钥(N,d)。


* 实践示例
下面用具体的数字来实践RSA密钥对生成、加密以及解密过程。为了计算方便，这里使用比较小的数做演示，实际为了安全性都会使用非常大的数字。

1. 选择两个质数，比如p=61，q=53，则N=p*q=3233
2. 计算\lambda(N)=lcm(p-1,q-1)=lcm(60,52)=780
3. 求e，其中1<e<780，e还要与780互质，这样的数有多个，比如7、9、11、14、17...。这里选e=17
4. 求d=413。计算过程：d*e mode \lambda(N)=1，413*17 mod780=1
5. 这样就得到公钥是(n = 3233, e = 17)，私钥是(n = 3233, d = 413)。
6. 假如明文是m=65，加密得到密文c=65^17 (mod 3233)=2790
7. 解密密文得到明文m=2790^413 (mod 3233)=65


* 参考资料
1. [[https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95][RSA加密算法]]
